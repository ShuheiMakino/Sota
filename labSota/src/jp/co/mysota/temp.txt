try{
ConfigurationBuilder cb = new ConfigurationBuilder();
cb.setDebugEnabled(true)
  .setOAuthConsumerKey("amssqZdWo4YasEHpYacSnvLBL")
  .setOAuthConsumerSecret("p1RjOH9z75rVXBDlPD4pfX2KV11S7glrZycxDptRgO5thDINkb")
  .setOAuthAccessToken("4882733018-6r7fqkuAiWOtXGorBCX0eXbt3Kn6QezyW54H00d")
  .setOAuthAccessTokenSecret("oTPnpb2asAsos7N4OWGZUeURrlPXBmn2TLcG3hk0o68Dg");

TwitterFactory tf = new TwitterFactory(cb.build());

Twitter tw = tf.getInstance();

defaultPose = new CRobotPose();
		defaultPose.SetPose(	new Byte[]{1,2,3,4,5,6,7,8},
						new Short[]{0,-900,0,900,0,0,0,0}
						);
		defaultPose.SetTorque(	new Byte[]{1,2,3,4,5,6,7,8},
						new Short[]{100,100,100,100,100,100,100,100}
						);
		defaultPose.SetLed(	new Byte[]{0,1,2,8,9,10,11,12,13},
						new Short[]{0,-255,0,180,80,0,180,80,0}
						);
	leftUpPose = new CRobotPose();
		leftUpPose.SetPose(	new Byte[]{1,2,3,4,5,6,7,8},
						new Short[]{0,500,0,900,0,0,0,0}
						);
		leftUpPose.SetTorque(	new Byte[]{1,2,3,4,5,6,7,8},
						new Short[]{100,100,100,100,100,100,100,100}
						);
		leftUpPose.SetLed(	new Byte[]{0,1,2,8,9,10,11,12,13},
						new Short[]{0,-255,0,180,80,0,180,80,0}
						);
	rightUpPose = new CRobotPose();
		rightUpPose.SetPose(	new Byte[]{1,2,3,4,5,6,7,8},
						new Short[]{0,-900,0,-500,0,0,0,0}
						);
		rightUpPose.SetTorque(	new Byte[]{1,2,3,4,5,6,7,8},
						new Short[]{100,100,100,100,100,100,100,100}
						);
		rightUpPose.SetLed(	new Byte[]{0,1,2,8,9,10,11,12,13},
						new Short[]{0,-255,0,180,80,0,180,80,0}
						);
	beShyPose = new CRobotPose();					
		beShyPose.SetPose(	new Byte[]{1,2,3,4,5,6,7,8},
						new Short[]{-15,-14,-900,14,900,2,50,-2}
						);
		beShyPose.SetTorque(	new Byte[]{1,2,3,4,5,6,7,8},
						new Short[]{100,100,100,100,100,100,100,100}
						);
		beShyPose.SetLed(	new Byte[]{0,1,2,8,9,10,11,12,13},
						new Short[]{0,-255,0,140,30,30,140,30,30}
						);
						
while(true){
	//User setting
	User hostAccount = tw.showUser("@IPLSota");
	User newsAccount = tw.showUser("@nhk_news");
	//Loop test
	// count++;
	// System.out.println("count:" + count);
	// System.out.println(tweetId);

if(tempBl){
	Status hostStatus = hostAccount.getStatus();
	tweet = hostStatus.getText();
	tweetId = hostStatus.getId();
	
	System.out.println("tempmode...please tweet task");
	CRobotUtil.wait((int)1000);
	
	if(tweet.equals("speak")){
		speakBl = true;
		tempBl = false;
		tw.destroyStatus(tweetId);
	}else if(tweet.equals("news")){
		newsBl = true;
		tempBl = false;
		tw.destroyStatus(tweetId);
	}else if(tweet.equals("pose")){
		poseBl = true;
		tempBl = false;
		tw.destroyStatus(tweetId);
	}else if(tweet.equals("photo")){
		photoBl = true;
		tempBl = false;
		tw.destroyStatus(tweetId);
	}else if(tweet.equals("photo_gray")){
		photoBl = true;
		grayOption = true;
		tempBl = false;
		tw.destroyStatus(tweetId);
	}
}
if(speakBl){
	Status hostStatus = hostAccount.getStatus();
	tweet = hostStatus.getText();
	
	CRobotUtil.wait((int)6000);
	
	switch(tweet){
		case "news":
			speakBl = false;
			newsBl = true;
			tweetId = hostStatus.getId();
			tw.destroyStatus(tweetId);
			break;
		case "pose":
			speakBl = false;
			poseBl = true;
			tweetId = hostStatus.getId();
			tw.destroyStatus(tweetId);
			break;
		case "photo":
			speakBl = false;
			photoBl = true;
			tweetId = hostStatus.getId();
			tw.destroyStatus(tweetId);
			break;
		case "photo_gray":
			speakBl = false;
			photoBl = true;
			grayOption = true;
			tweetId = hostStatus.getId();
			tw.destroyStatus(tweetId);
			break;
		case "speak":
			tw.destroyStatus(tweetId);
		default:
			if(tweetId != hostStatus.getId()){
			tweetId = hostStatus.getId();
			System.out.println("Sota found new tweet");
			String file = TextToSpeechSota.getTTSFile(tweet,(int)11,(int)13,(int)11);
			if(file!=null) CPlayWave.PlayWave(file,true);
			}else{
			System.out.println("Sota could't find new tweet");
			}
	}
}
if(newsBl){
	Status hostStatus = hostAccount.getStatus();
	tweet = hostStatus.getText();
	
	CRobotUtil.wait((int)6000);
	
	switch(tweet){
		case "speak":
			newsBl = false;
			speakBl = true;
			tweetId = hostStatus.getId();
			tw.destroyStatus(tweetId);
			break;
		case "pose":
			newsBl = false;
			poseBl = true;
			tweetId = hostStatus.getId();
			tw.destroyStatus(tweetId);
			break;
		case "photo":
			newsBl = false;
			photoBl = true;
			tweetId = hostStatus.getId();
			tw.destroyStatus(tweetId);
			break;
		case "photo_gray":
			newsBl = false;
			photoBl = true;
			grayOption = true;
			tweetId = hostStatus.getId();
			tw.destroyStatus(tweetId);
			break;
		case "news":
		default:
			Status newsStatus = newsAccount.getStatus();
			tweet = newsStatus.getText();
			String[] news = tweet.split("#", -1);
			
			if(tweetId != newsStatus.getId()){
			tweetId = newsStatus.getId();
			System.out.println("Sota found new news");
			
			String file = TextToSpeechSota.getTTSFile(news[0],(int)11,(int)13,(int)11);
			if(file!=null) CPlayWave.PlayWave(file,true);
			}else{
			System.out.println("Sota could't find new news");
			}
	}
}
if(poseBl){
	Status hostStatus = hostAccount.getStatus();
	tweet = hostStatus.getText();
	
	CRobotUtil.wait((int)6000);
	
	switch(tweet){
		case "speak":
			poseBl = false;
			speakBl = true;
			tweetId = hostStatus.getId();
			tw.destroyStatus(tweetId);
			break;
		case "news":
			poseBl = false;
			newsBl = true;
			tweetId = hostStatus.getId();
			tw.destroyStatus(tweetId);
			break;
		case "photo":
			poseBl = false;
			photoBl = true;
			tweetId = hostStatus.getId();
			tw.destroyStatus(tweetId);
			break;
		case "photo_gray":
			poseBl = false;
			photoBl = true;
			grayOption = true;
			tweetId = hostStatus.getId();
			tw.destroyStatus(tweetId);
			break;
		case "pose":
		default:
			if(tweetId != hostStatus.getId()){
				tweetId = hostStatus.getId();
			switch(tweet){
				case "まっすぐ":
				case "デフォルト":
				case "default":
					System.out.println("Sota found new action");
					GlobalVariable.motion.play(defaultPose,1000);
					CRobotUtil.wait(1000);
					tw.destroyStatus(tweetId);
					break;
				case "ひだり":
				case "左":
				case "left":
					System.out.println("Sota found new action");
					GlobalVariable.motion.play(leftUpPose,1000);
					CRobotUtil.wait(1000);
					tw.destroyStatus(tweetId);
					break;
				case "みぎ":
				case "右":
				case "right":
					System.out.println("Sota found new action");
					GlobalVariable.motion.play(rightUpPose,1000);
					CRobotUtil.wait(1000);
					tw.destroyStatus(tweetId);
					break;
				case "てれる":
				case "照れる":
					System.out.println("Sota found new action");
					GlobalVariable.motion.play(beShyPose,1000);
					CRobotUtil.wait(1000);
					tw.destroyStatus(tweetId);
					break;
				default:
				System.out.println("Sota could't find new action");
			}
			}else{
			System.out.println("Sota could't find new action");
			}
	}
}
if(photoBl){
	GlobalVariable.motion.play(defaultPose,1000);
	CRobotUtil.wait((int)1000);
	
	localDateTime = LocalDateTime.now();
	LocalDateTime d = (LocalDateTime)localDateTime;
	year = d.getYear();
	month = d.getMonthValue();
	day = d.getDayOfMonth();
	hour = d.getHour();
	minute = d.getMinute();
	folderDate = String.valueOf(year) + String.valueOf(month) + String.valueOf(day);

	System.out.println("Take photo standby...");
	String photoCount = TextToSpeechSota.getTTSFile("５、４、３、２、１、",(int)6,(int)13,(int)11);
	if(photoCount!=null) CPlayWave.PlayWave(photoCount,true);
	
	File newFolder = new File("/var/sota/photo/" + folderDate);
	
	if (newFolder.mkdir()){
      System.out.println("ディレクトリの作成に成功しました");
    }else{
      System.out.println("既にディレクトリが存在しています");
    }
	
	String filepath = "/var/sota/photo/";
	filepath += folderDate + "/" + "photo at " + hour + ":" + minute;
	boolean isTrakcing=GlobalVariable.robocam.isAliveFaceDetectTask();
	if(isTrakcing) GlobalVariable.robocam.StopFaceTraking();
	if(grayOption){
		GlobalVariable.robocam.initStill(new CameraCapture(CameraCapture.CAP_IMAGE_SIZE_5Mpixel, CameraCapture.CAP_FORMAT_BYTE_GRAY));
		grayOption = false;
	}else{
		GlobalVariable.robocam.initStill(new CameraCapture(CameraCapture.CAP_IMAGE_SIZE_5Mpixel, CameraCapture.CAP_FORMAT_MJPG));
	}
	GlobalVariable.robocam.StillPicture(filepath);

	CRobotUtil.Log("stillpicture","save picthre file to \"" + filepath +"\"");
	if(isTrakcing) GlobalVariable.robocam.StartFaceTraking();
	
	photoBl = false;
	tempBl = true;
	
	}
}
}catch(TwitterException te){
System.out.println(te);
}